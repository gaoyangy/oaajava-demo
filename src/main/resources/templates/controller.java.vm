##package ${cfg.controllerPackage};
package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
##import ${package.Entity}.bo.QueryBO;
##import ${cfg.extPackagePre}.${cfg.service}.${table.serviceName};
##import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;

/**
 * @Package: ${package.Entity}.${entity}
 * @Description: <$!{table.comment}前端控制器>
 * @Author: ${author}
 * @CreateDate: ${date}
 * @UpdateUser: ${author}
 * @UpdateDate: ${date}
 * @UpdateRemark: <>
 * @Version: 1.0
 */
#set($path=${table.name})
#set($path=$path.concat("path"))
@RestController
@Api(tags = "${entity}-相关接口")
@RequestMapping(value = "${entity}")
public class ${table.controllerName} {

private static final Logger logger=LoggerFactory.getLogger(${table.controllerName}.class);

@Autowired
private ${table.serviceName} i${table.serviceName};

@GetMapping("Get${entity}ById/{id}")
@ApiOperation(value = "$!{table.comment}获取某一实体")
public ${entity} get${table.serviceName}Details(@PathVariable Integer id){
        return i${table.serviceName}.getById(id);
        }

@PostMapping("Post${entity}")
@ApiOperation(value = "$!{table.comment}新增数据")
public boolean save${table.serviceName}(@RequestBody ${entity} ${entity}Dto){
        return i${table.serviceName}.save(${entity}Dto);
        }

@PutMapping("Update${entity}ById/{id}")
@ApiOperation(value = "$!{table.comment}修改数据")
public boolean modify${table.serviceName}(@RequestBody ${entity} ${entity}Dto,@PathVariable Integer id){
    ${entity}Dto.setId(id);
        return i${table.serviceName}.updateById(${entity}Dto);
        }

@DeleteMapping("Delete${entity}Batch")
@ApiOperation(value = "$!{table.comment}批量删除数据")
public boolean batchRemove${table.serviceName}(@RequestParam(value = "ids") List<Integer> ids){
        return i${table.serviceName}.removeByIds(ids);
        }

@DeleteMapping("Delete${entity}ById/{id}")
@ApiOperation(value = "$!{table.comment}删除数据")
public boolean remove${table.serviceName}(@PathVariable Integer id){
        return i${table.serviceName}.removeById(id);
        }
        }